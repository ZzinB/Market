plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.json', name: 'json', version: '20210307'
	testImplementation 'junit:junit:4.13.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core:4.0.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	testImplementation 'org.testcontainers:junit-jupiter:1.17.6' //테스트컨테이너

	implementation 'org.springframework.boot:spring-boot-starter-mail' //이메일 발송

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jjwt API
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

	// jjwt Implementation
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'

	// jjwt Jackson
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	//actuator, prometheus(micrometer)
	implementation ("org.springframework.boot:spring-boot-starter-actuator")
	runtimeOnly ("io.micrometer:micrometer-registry-prometheus")

	implementation 'org.springframework.boot:spring-boot-starter-websocket'

}

tasks.named('test') {
	useJUnitPlatform()
}
